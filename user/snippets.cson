# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson


# Universal
"*":
	"Node Script":
		prefix: "node"
		body: '#!/usr/local/bin/node --es_staging\n"use strict";\n\n'
	
	"Shell Script":
		prefix: "sh"
		body: "#!/bin/sh\nset +o posix;\n\n"

	Perl:
		prefix: "pl"
		body: "#!/usr/bin/env perl\nuse strict;\nuse warnings;\n$1"

	"Boilerplate HTML":
		prefix: "htmldoc"
		body: '<!DOCTYPE html>\n<html lang="en-AU">\n<head>\n<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />\n<meta http-equiv="X-UA-Compatible" content="IE=edge" />\n<meta name="viewport" content="initial-scale=1, minimum-scale=1" />\n<title>$1</title>\n\n<style>\n/** Reset */\nhtml{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none!important}a{background-color:transparent}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:0;text-decoration:none}b,strong{font-weight:inherit}b,strong{font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border-style:none}svg:not(:root){overflow:hidden}figure{margin:1em 2.5em}hr{box-sizing:content-box;height:0;overflow:visible}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}button:-moz-focusring,input:-moz-focusring{outline:1px dotted ButtonText}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{color:inherit;padding:0}textarea{overflow:auto}optgroup{font-weight:700}\n\n*{\n\ttab-size: 4;\n\tbox-sizing: border-box;\n}\n\t:focus{outline: none}\n</style>\n</head>\n\n\n<body>\n\t\n\t$2\n\t\n</body>\n</html>'

# Makefile
".source.makefile":
	"Windows check":
		prefix: "iswin"
		body: '# Windows: CMD.exe\nifdef SystemRoot\n\tIS_WINDOWS = 1\nendif\n\n# Windows: MinGW / COMMAND.COM\nifdef SYSTEMROOT\n\tIS_WINDOWS = 1\nendif\n\n'


# Cascading Style Sheets
".source.css":
	"Input Placeholder":
		prefix: "placeholder"
		body: "::-webkit-input-placeholder{    $1}\n::-ms-input-placeholder{        $1}\n:-ms-input-placeholder{         $1}\n::-moz-placeholder{opacity: 1;  $1}\n:-moz-placeholder{              $1}\n::placeholder{                  $1}\n:placeholder-shown{             $1}\n"

	"Comment":
		prefix: "/"
		body: "/** $1 */"

# JavaScript
".source.js":
	Comment:
		prefix: "/"
		body: "/** $1 */"
	DocBlock:
		prefix: "/*"
		body: "/**\n * $1\n */"
	Babel:
		prefix: "babel"
		body: '"use babel";\n"use strict";\n\n'
	Dir:
		prefix: "dir"
		body: "console.dir($1);$0"
	Info:
		prefix: "info"
		body: "console.info($1);$0"
	Spec:
		prefix: "it"
		body: 'it("$1", function(){\n\t$2\n});'
	"Spec Description":
		prefix: "ds"
		body: 'describe("$1", function(){\n\t$2\n});'
	Strict:
		prefix: "js"
		body: '"use strict";\n\n$1'
	"Node-friendly log":
		prefix: "nog"
		body: 'console.log(JSON.stringify($1, null, "\\\\t"));'
	Require:
		prefix: "req"
		body: 'const ${1:module} = require("${1:module}");'
	For:
		prefix: "for"
		body: "for(let i = 0, l = ${1:array}.length; i < l; ++i){\n\tlet ${2:item} = ${1:array}[i];\n\t$3\n}"
	"Read Stdin":
		prefix: "stdin"
		body: 'process.stdin.setEncoding("UTF8");\nprocess.stdin.on("readable", () => {\n\tlet chunk = process.stdin.read();\n\tif(null !== chunk){\n\t\t$1\n\t}\n})\n'
		


# CoffeeScript/CSON
".source.coffee":
	"Patterns (Single-line)":
		prefix: "pat"
		body: "patterns: [$1]"
	"Patterns (Multiline)":
		prefix: "Pat"
		body: "patterns: [{\n\t$1\n}]"
	"Include":
		prefix: "inc"
		body: "include: \"#$1\""
	"Extended Expression":
		prefix: "xe"
		body: '"""(?x)\n\t$1\n"""'
	"Capturing Groups: Begin":
		prefix: "begin"
		body: 'beginCaptures:\n\t0: name: "$2"'
	"Capturing Groups: End":
		prefix: "end"
		body: 'endCaptures:\n\t0: name: "$2"'
	"Newline Snarf":
		prefix: "nl"
		body: 'begin: "\\\\\\\\\\\\\\\\$\\\\\\\\n"\nend: "^"'
	"Roff Macro":
		prefix: "mac"
		body: """
			name: "meta.function.\\${2:/downcase}.${1:PACKAGE}.macro.roff"
			begin: "^([.'])[ \\\\t]*(${2:NAME})\\\\\\\\b"
			end:   "(?<!\\\\\\\\\\\\\\\\)(?=\$)|(?=\\\\\\\\\\\\\\\\\\\\\\")"
			beginCaptures:
				1: {name: "punctuation.definition.macro.roff"}
				2: {name: "entity.function.name.roff"}
			$3
		"""
	
	
	# Symptoms of leaning toothpick syndrome:
	"Escaped Backslash":
		prefix: "\\"
		body: "\\\\\\\\\\\\\\\\"
	"Double Escaped Backslash":
		prefix: "\\\\"
		body: "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"

	# Snippets not related to grammar-development
	Info:
		prefix: "info"
		body: "console.info $0"

".source.coffee .oniguruma":
	"Include":
		prefix: "inc"
		body: "Include “#$1”"


# Roff
".text.roff":
	"Macro-block header":
		prefix: "mac"
		body: """
		.\\\\"=== ${1:NAME} ==================================================================
		.\\\\" 1. ${2:Brief description}
		.\\\\"      Usage:   ${3:Xx [argument-1] [argument-2]}
		.\\\\"    Example:   ${4:Xx ABC 123}
		"""
	"Manual-page header":
		prefix: "head"
		body: """
		.\\\\"=== ${1:TITLE} ================================================================
		.\\\\" 
		.\\\\" ${2:Text}
		.\\\\" 
		"""



# Shell-scripts
".source.shell":
	"Getopts":
		prefix: "opt"
		body: "while getopts ${1:opt} ${2:option}; do\n\tcase $${2:option} in\n\t\t${3:o) SOME=THING;;}\n\tesac\ndone\nshift $((OPTIND - 1))"
