# -*- makefile-gmake -*-

SHELL = /bin/bash
NPM := $(shell [ -n "$(NPM)" ] && printf '%s' "$(NPM)" || npm root -g)

all: \
	asar \
	decaffeinate \
	decimal128 \
	dotenv \
	dotenv-expand \
	genex \
	js-toml \
	peggy \
	plist \
	prompt-view \
	record-jar \
	roff


# Projects folder that should already exist on my personal workstation(s)
projects = $(HOME)/Labs

$(projects):
	[[ -d $@ ]] || mkdir "$@"

$(projects)/%: $(projects)
	[[ -d $@/.git ]] || git -C "$^" clone 'git@github.com:Alhadis/$*.git'


# Link dependencies from globally-installed modules, because NPM can't be
# trusted with symbolic links in `node_modules` directories (apparently).
$(NPM)/%:
	@ [[ -d $@ ]] || npm install --global $*@latest

.PHONY: all
%: $(NPM)/%
	@ [[ -d $@ ]] || echo "Linking: $@ -> $^" && ln -sf "$^" "$@"


# Ad-hoc exceptions for personal projects being worked on locally
roff: $(projects)/Roff.js
	ln -s "$^" "$@"
	cd "$@" && $(MAKE) umd

jg: $(projects)/JG
	if [[ -h $@ ]] && [[ $@ -ef $^ ]]; \
		then touch -h "$@"; \
		else ln -s "$^" "$@"; \
	fi


# Prune symlinks accidentally created inside their target directories
prune-nested-links:
	for i in $$(find . -type l -maxdepth 1); do \
		link="$$i/$${i##*/}"; \
		[ -h "$$link" ] || continue; \
		[ "`realpath $$link`" = "`realpath $$i`" ] && rm -v "$$link"; \
	done
.PHONY: prune-nested-links


# Purge untracked directory contents
clean:
	git ls-files -oz --directory | xargs -0 rm -rfv
.PHONY: clean
