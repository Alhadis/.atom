@import (optional) "./tmp.less";

/* Force tab-width for elements outside editor windows */
*{ tab-size: 4; }


/* OpenType features */
atom-text-editor{
	font-variant-ligatures: contextual;

	// Bunched double/triple-slashes
	.syntax--comment.syntax--line.syntax--double-slash > .syntax--punctuation.syntax--definition.syntax--comment,
	.syntax--comment.syntax--line.syntax--triple-slash > .syntax--punctuation.syntax--definition.syntax--comment,
	.syntax--string.syntax--regexp.syntax--multiline.syntax--coffee > .syntax--punctuation.syntax--definition.syntax--begin,
	.syntax--string.syntax--regexp.syntax--multiline.syntax--coffee > .syntax--punctuation.syntax--definition.syntax--end,
	.syntax--string.syntax--regexp.syntax--multiline.syntax--sy     > .syntax--punctuation.syntax--definition.syntax--triple-slash{
		font-variant-ligatures: discretionary-ligatures;
	}

	// Haskell compound operators
	.syntax--haskell.syntax--keyword{
		font-variant-ligatures: discretionary-ligatures;
	}

	// APL
	.syntax--apl.syntax--spaced.syntax--keyword{
		font-feature-settings: "ss01";
	}

	// Disable ligatures
	.syntax--string.syntax--double.syntax--quoted.syntax--coffee,
	.syntax--keyword.syntax--operator.syntax--assignment.syntax--compound.syntax--bitwise.syntax--js,
	.syntax--keyword.syntax--operator.syntax--assignment.syntax--compound.syntax--bitwise.syntax--ts,
	.syntax--keyword.syntax--operator.syntax--assignment.syntax--compound.syntax--bitwise.syntax--tsx{
		font-variant-ligatures: none;
	}
}

/* Disable ligatures temporarily */
body.disable-ligatures{
	--editor-font-family: Menlo;
	
	atom-text-editor,
	atom-text-editor *{
		font-variant-ligatures: none !important;
	}
}


/* Stop cursor from blinking. S/O to https://discuss.atom.io/t/blinking-cursor/1544/22 */
atom-text-editor.is-focused .cursors .cursor{
	opacity: 1;
}

/* Bracket-matcher highlights */
.bracket-matcher .region{
	background: lime;
	outline: 1px solid #0a0;
	
	/* Hide bracket-matching pairs unless requested */
	.scroll-view:not(.show-bracket-matcher) &{
		visibility: hidden;
	}
}

/* Hide spell-checker until requested */
.spell-check-misspelling .region{
	background: rgba(255, 0, 0, .25);
	outline: 1px solid red;
	border: none;
	
	.scroll-view:not(.show-spellcheck) &{
		display: none;
	}
}

/* Hide wrapping guide */
.wrap-guide{
	display: none !important;
}


/* Debugging highlights for language-grammar development */
.test1(){
	background: #f00 !important;
	&.syntax--faded{
		background: rgba(255, 0, 0, .25) !important;
	}
}
.test2(){
	background: #0e0 !important;
	&.syntax--faded{
		background: rgba(0, 238, 0, .25) !important;
	}
}
.test3(){
	background: #6cf !important;
	&.syntax--faded{
		background: rgba(102, 204, 255, .25) !important;
	}
}
.box(){
	outline: 1px solid #ccc;
	
	&.syntax--test-1, .syntax--test1,
	&.syntax--test-2, .syntax--test2,
	&.syntax--test-3, .syntax--test3{
		outline-color: #000;
	}
	
	&.syntax--faded{
		opacity: .25;
	}
}

.syntax--test-1, .syntax--test1{ .test1(); }
.syntax--test-2, .syntax--test2{ .test2(); }
.syntax--test-3, .syntax--test3{ .test3(); }
.syntax--box:not(.syntax--roff):not(.syntax--request){ .box(); }


/* HACK: Remove once we do something about pointless icon overrides in File-Icons */
.perl-icon[data-name$=".t"]::before{
	font: 17px "File-Icons";
	content: "\ea65";
	top: 3px;
}

.icon[data-path$="/packages/injections/misc/latin-1"]::before{
	font: 16px "Octicons Regular";
	top: unset;
	content: "\f011";
}

[data-path*="/t/0"], [data-path*="/t/1"],
[data-path*="/t/2"], [data-path*="/t/3"],
[data-path*="/t/4"], [data-path*="/t/5"],
[data-path*="/t/6"], [data-path*="/t/7"],
[data-path*="/t/8"], [data-path*="/t/9"]{
	&.icon[data-path$=".sh"]::before{
		font: 17px "File-Icons";
		content: "\ea63";
		top: 3px;
		
		body:not(.file-icons-colourless) & {
			color: #90a959;
		}
	}
}

.icon[data-path$="npmrc"]::before{
	font: 17px "File-Icons";
	content: "\e91c";
	top: 3px;

	body:not(.file-icons-colourless) & {
		color: #ac4142;
	}
}

.js-icon[data-name$="-spec.jsx"]::before{
	font: 17px "File-Icons";
	content: "\ea67";
	top: 3px;
}

/* HACK: Force checklist icon for TODO files, which use MD highlighting */
.icon[data-name="TODO"]::before{
	font: 17px "Octicons Regular";
	content: "\f076";
	left: 1px;
	top:  1px;
	
	body:not(.file-icons-colourless) & {
		color: #90a959;
	}
}


atom-notification{
	.fd.detail{
		@gutter: 30px;
		margin-left: -@gutter;
		padding-left: @gutter;
		
		// File descriptor indicators
		&::before{
			content: attr(data-fd)">";
			position: absolute;
			left: 0;
			width: @gutter;
			height: 36px;
			text-align: center;
			font: 1.5em/1 Menlig, Menloco, monospace;
			color: rgba(255, 255, 255, .75);
			display: block;
			margin-top: -11px;
			box-sizing: border-box;
			padding: 9px 0 0;
		}
		&[data-fd="1"]::before{
			border-top: 0;
			margin-top: -10px;
			height: 35px;
		}
		
		.detail-content{
			tab-size: 4;
			margin-left: 1em;
		}
	}
	
	/* Disable transitions when dismissing popups */
	&.remove{
		-webkit-animation-duration: 0ms !important;
	}
	
	/* Scope-logging polishes */
	&.info.has-close > .content > .message > ul{
		padding-left: 1.2em;
		margin-right: -25px;
		cursor: text;
		
		& > li{
			user-select: all;
		}
	}
}

/* Hide EditorConfig's status-bar tile */
#aec-status-bar-container{
	display: none !important;
}


/* Docks: Hide toggle-buttons */
body:not(.show-toggle-buttons) .atom-dock-toggle-button{
	display: none !important;
}


/* Seti Syntax: Tweak some colour choices */
.theme-seti-syntax atom-text-editor{
	.syntax--markup.syntax--heading{
		& .syntax--punctuation.syntax--definition.syntax--heading{
			color: #2d3e3a;
		}
	}
	
	.syntax--source.syntax--yacc{
		color: inherit;
		
		.syntax--variable.syntax--language{
			& .syntax--punctuation.syntax--definition.syntax--variable{
				color: #4d5a5e;
			}
		}
	}
	
	&[mini]{
		&[data-grammar$="regexp"],
		&[data-grammar$="regexp replacement"]{
			.highlights .highlight.selection .region{
				background: rgba(81, 154, 186, 0.2) !important;
			}
		}
		
		&[data-grammar$="null-grammar"]{
			.highlights .highlight.selection .region{
				background: rgba(154, 154, 154, 0.35) !important;
			}
		}
		
		.cursor{
			border-left-width: 1px;
		}
	}
	
	.syntax--constant.syntax--other.syntax--reference.syntax--link,
	.syntax--underline{
		text-decoration: underline;
	}
}

.theme-seti-syntax .find-and-replace atom-text-editor[mini]{
	font-family: var(--editor-font-family);
	font-size:   var(--editor-font-size);
	letter-spacing: 0;
}


/* GitHub Syntax */
.theme-github-atom-light-syntax{
	
	/* Show highlighted brackets on current line */
	.cursor-line{
		background: none !important;
	}
	
	/* Prepend ^M to scoped carriage-returns */
	.syntax--carriage-return::before{
		content: "^M";
	}
}


/* File Icons: Outlines for icon adjustment */
.file-icons-show-outlines{
	.icon{
		outline: 1px solid blue;
		
		&:before{
			outline: 1px solid red;
		}
	}
}


/* Various UI polishes */
.theme-atom-light-ui{
	
	.deprecation-message > ul > li > code{
		word-wrap: break-word;
		max-width: 100%;
		display: block;
		white-space: pre-line;
		line-height: 1.7;
	}

	/* Panels */
	atom-panel-container:first-child{
		box-shadow: 1px 0 0 #9f9f9f;
		z-index: 2;
	}

	atom-text-editor .gutter .line-number{
		&.git-line-added,
		&.git-line-modified,
		&.git-line-removed{
			border-left-width: 3px;
		}
	}
}


/* Fade briefly when clicked. See: src/index.js */
status-bar-file{
	transition: .15s ease-in-out opacity;
}


/* Fix margins of status-bar icons */
status-bar-git .commits-ahead-label:before{
	margin-right: 2px;
}


/* Undo distractions added by atom/atom#18738 */
.grammar-selector .pull-right > .badge{
	all: unset;
	opacity: .4;
	
	&:first-child:nth-last-child(2){
		display: none;
	}
}

/* Compensate for missing padding when hiding gutter */
.gutter-container[hidden]{
	display: block !important;
	padding-left: 1em;
	
	> *{
		display: none !important;
	}
}
