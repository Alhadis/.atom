scopeName: "fuck-atom.3"
injectionSelector: "L:source.js"
patterns: [{
	begin: "(?=^\\s*/[/*]\\s*<!DOCTYPE\\s+html[^>]*>)"
	end:   "(?=A)B"
	patterns: [
		{include: "#htmlLine"}
		
		begin: "(?=^\\s*/[/*]\\s*</script></body></html>)"
		end:   "(?=A)B"
		patterns: [
			{include: "#htmlLine"}
			
			begin: "(?<=</html>)\\s*"
			end:   "(?=A)B"
			contentName: "invalid.illegal.unreachable"
			
			{include: "source.js"}
		]
		
		{include: "source.js"}
	]
},{
	begin: "(?=\\s*(?<!\\$)\\bnew\\s+RegExp\\s*\\(\\s*String\\.raw\\s*`)"
	end:   "(?<=`)"
	patterns: [{
		match: "\\G([^`]+)"
		captures:
			1: patterns: [include: "source.js"]
	},{
		# new RegExp(String.raw `(?x) …`);
		name:  "string.quoted.template.regexp.js"
		begin: "(`)(\\(\\?\\^?[A-Za-wyz]*x[A-Za-z]*[-A-Za-wyz]*\\))"
		end:   "`"
		beginCaptures:
			1: name: "punctuation.definition.string.begin.js"
			2: patterns: [include: "source.regexp#group"]
		endCaptures:
			0: name: "punctuation.definition.string.end.js"
		patterns: [include: "source.regexp.extended"]
	},{
		# new RegExp(String.raw `…`);
		name:  "string.quoted.template.regexp.js"
		begin: "`"
		end:   "`"
		beginCaptures:
			1: name: "punctuation.definition.string.begin.js"
			2: patterns: [include: "source.regexp#group"]
		endCaptures:
			0: name: "punctuation.definition.string.end.js"
		patterns: [include: "source.regexp.extended"]
	}]
}]

repository:
	htmlLine:
		begin: "\\G\\s*(//)"
		end:   "$"
		beginCaptures:
			0: name: "comment.line.double-slash.js"
			1: name: "punctuation.definition.comment.js"
		patterns: [{
			name:  "text.embedded.html.basic"
			match: "\\G(.+)(?=\\s*$)"
			captures:
				1: patterns: [include: "text.html.basic"]
		}]
