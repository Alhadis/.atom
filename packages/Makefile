all: \
	advanced-open-file \
	atom-html-preview \
	auto-detect-indentation \
	editorconfig \
	file-icons \
	form-feeds \
	git-blame \
	github-atom-light-syntax \
	language-ada \
	language-agc \
	language-antlr \
	language-apache \
	language-apl \
	language-applescript \
	language-asciidoc \
	language-batchfile \
	language-common-lisp \
	language-crystal-actual \
	language-diff \
	language-dircolors \
	language-docker \
	language-emacs-lisp \
	language-erlang \
	language-etc \
	language-file-magic \
	language-fontforge \
	language-fortran \
	language-generic-config \
	language-glsl \
	language-gn \
	language-grammars \
	language-haskell \
	language-idl \
	language-ini \
	language-jflex \
	language-latex \
	language-llvm \
	language-lua \
	language-m68k \
	language-markdown \
	language-mathematica \
	language-matlab-octave \
	language-maxscript \
	language-md \
	language-mediawiki \
	language-modula-2 \
	language-ninja \
	language-ocaml \
	language-pascal \
	language-pcb \
	language-powershell \
	language-regexp \
	language-restructuredtext \
	language-roff \
	language-rpm-spec \
	language-rust \
	language-scheme \
	language-sed \
	language-srt \
	language-tcltk \
	language-texinfo \
	language-turing \
	language-units \
	language-v \
	language-viml \
	language-vtt \
	language-wavefront \
	language-webassembly \
	language-x86-64-assembly \
	lisp-paredit \
	MagicPython \
	make-executable \
	minimap \
	pdf-view \
	postscript \
	project-manager \
	regex-comments \
	seti-syntax \
	seti-ui \
	split-diff \
	theme-reel \
	xterm-quotes \


file-icons:
	git clone 'git@github.com:file-icons/atom.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

form-feeds:
	git clone 'git@github.com:Alhadis/Atom-FormFeeds.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-agc:
	git clone 'git@github.com:Alhadis/language-agc.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-apl:
	git clone 'git@github.com:Alhadis/language-apl.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-emacs-lisp:
	git clone 'git@github.com:Alhadis/language-emacs-lisp.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-etc:
	git clone 'git@github.com:Alhadis/language-etc.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-file-magic:
	git clone 'git@github.com:Alhadis/language-file-magic.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-fontforge:
	git clone 'git@github.com:Alhadis/language-fontforge.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-gn:
	git clone 'git@github.com:Alhadis/language-gn.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-grammars:
	git clone 'git@github.com:Alhadis/language-grammars.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-markdown:
	git clone 'git@github.com:burodepeper/language-markdown.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-maxscript:
	git clone 'git@github.com:Alhadis/language-maxscript.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-md:
	git clone 'git@github.com:Alhadis/language-md.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-pcb:
	git clone 'git@github.com:Alhadis/language-pcb.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-regexp:
	git clone 'git@github.com:Alhadis/language-regexp.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-restructuredtext:
	git clone 'git@github.com:Lukasa/language-restructuredtext.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-roff:
	git clone 'git@github.com:Alhadis/language-roff.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-sed:
	git clone 'git@github.com:Alhadis/language-sed.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-texinfo:
	git clone 'git@github.com:Alhadis/language-texinfo.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-turing:
	git clone 'git@github.com:Alhadis/language-turing.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-units:
	git clone 'git@github.com:Alhadis/language-units.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-viml:
	git clone 'git@github.com:Alhadis/language-viml.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-wavefront:
	git clone 'git@github.com:Alhadis/language-wavefront.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

language-webassembly:
	git clone 'git@github.com:Alhadis/language-webassembly.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

postscript:
	git clone 'git@github.com:Alhadis/Atom-PostScript.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

regex-comments:
	git clone 'git@github.com:Alhadis/Regex-Comments.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

xterm-quotes:
	git clone 'git@github.com:Alhadis/Atom-XTermQuotes.git' $@
	cd $@ && apm install . && npm run-script --if-present post-install

.PHONY: all
%:
	apm install $@
	if [ -f "patches/$@.patch" ]; then patch -d "$@" -p1 < "patches/$@.patch"; fi

language-markdown:
	git clone --depth=1 'git@github.com:burodepeper/language-markdown.git' $@
	patch -d "$@" -p1 < "patches/$@.patch"
	cd $@ && rm -rf lib && sed -i.ugh \
		-e '/"dependencies": {$$/,/^[[:blank:]]*},$$/d' \
		-e '/"main":/d' \
		package.json && rm -f *.ugh
	find $@ -type f -print0 | xargs -0 perl -pi -e 's/\btext[ .]\Kmd\b/markdown/g'
